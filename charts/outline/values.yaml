---
# -- Provide a name in place of `outline`. Prefer using global.nameOverride if possible
nameOverride: ""
# -- String to fully override `"outline.fullname"`. Prefer using global.fullnameOverride if possible
fullnameOverride: ""

image:
  # -- The Docker repository to pull the image from
  repository: outlinewiki/outline
  # -- The logic of image pulling
  imagePullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion
  tag: ""

# -- The number of replicas to deploy
replicaCount: 1

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

# -- Optional additional annotations to add to the pods
podAnnotations: {}

# -- Optional additional labels to add to the pods
podLabels: {}

podSecurityContext: {}
  # -- Set the shared file system group for all containers in the pod
  # fsGroup: 2000

# -- Run containers as a specific securityContext
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Init containers to add to the deployment
initContainers: []
  # - name: wait-for-postgres
  #   image: busybox:latest
  #   command: ['sh', '-c', 'do-something-here']

service:
  # -- Kubernetes service type for web traffic
  type: ClusterIP
  # -- Port number for web traffic
  port: 3000

ingress:
  # -- Enable an ingress resource
  enabled: false
  # -- Defines which ingress controller will implement the resource
  className: ""
  # -- Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- List of ingress hosts
  hosts: []
    #  - host: chart-example.local
    #    paths:
    #      - path: /
    #        pathType: ImplementationSpecific
    # -- Ingress TLS configuration
  tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
  limits:
    # -- The maximum amount of CPU the container can use
    cpu: 1000m
    # -- The maximum amount of memory the container can use
    memory: 1Gi
  requests:
    # -- Specifies the minimum amount of CPU that will be allocated to the container
    cpu: 250m
    # -- Specifies the minimum amount of memory that will be allocated to the container
    memory: 512Mi

persistence:
  # -- Determines whether persistent storage is enabled or not
  enabled: true
  # -- Specifies the level of access to the persistent storage (e.g., read-write, read-only)
  accessMode: ReadWriteOnce
  # -- Defines the amount of storage allocated for persistence
  size: 2Gi
  # -- You can also use an existing claim instead of creating one
  # existingClaim: "myClaim"
  # -- If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  # If the value is "-" or not defined, volume.alpha.kubernetes.io/storage-class: default
  # storageClass:

autoscaling:
  # -- Controls whether autoscaling is enabled or disabled for the application
  enabled: false
  # -- Defines the minimum number of application instances (replicas) to maintain, even during low demand
  minReplicas: 1
  # -- Sets the maximum number of application instances (replicas) that can be scaled up to during high demand
  maxReplicas: 100
  # -- Specifies the CPU utilization threshold at which autoscaling will be triggered
  # to adjust the number of replicas
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Environment variables to pass to the deployment
# See configuration options at <https://github.com/outline/outline/blob/main/.env.sample>
env: []
  # - name: ENV_VAR_NAME
  #   value: VALUE
  # - name: ENV_VAR_OTHER
  #   valueFrom:
  #     secretKeyRef:
  #       name: secret-name
  #       key: secret-key
  # - name: ENV_VAR_ANOTHER
  #   valueFrom:
  #     configMapKeyRef:
  #       name: config-map-name
  #       key: config-map-key

# -- envFrom to pass to the deployment
envFrom: []
  # - configMapRef:
  #     name: config-map-name
  # - secretRef:
  #     name: secret-name

# -- Additional volumes to mount to the deployment
extraVolumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

# -- Additional volume mounts for the containers
extraVolumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

# -- NodeSelector for the deployment
nodeSelector: {}

# -- Tolerations for the deployment
tolerations: []

# -- Affinity for the deployment
affinity: {}

outline:
  # -- Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
  # in your terminal to generate a random value.
  secret_key: ""

  # -- Generate a unique random key. The format is not important but you could still use
  # `openssl rand -hex 32` in your terminal to produce this.
  utils_secret: ""

  # -- Connection string to access the database
  database_url: postgres://outline:secretPassword@outline-postgres:5432/outline

  # -- Disable SSL for connecting to PostgreSQL
  pgsslmode: disable

  # -- Connection string to access Redis
  redis_url: redis://outline-redis:6379

  # -- URL should point to the fully qualified, publicly accessible URL.
  url: https://outline.example.com

  # -- Specify what storage system to use. Possible value is one of "s3" or "local".
  file_storage: local

  # -- Maximum allowed byte size for the uploaded attachment. Make sure to define it as a string.
  file_storage_upload_max_size: "50000000"

scheduler:
  # -- Create a CronJob to run Outline's scheduled jobs.
  # Refer to <https://docs.getoutline.com/s/hosting/doc/scheduled-jobs-RhZzCt770H> for more information.
  enabled: true
  # -- Schedule to use for the CronJob
  schedule: 30 12 * * *
  # -- Timezone for interpreting the cron schedule
  timeZone: Europe/Budapest
  # -- Concurrency policy for the CronJob
  concurrencyPolicy: Forbid
  # -- Optional additional annotations to add to the CronJob runner pod
  annotations: {}
  # -- Optional additional labels to add to the CronJob runner pod
  labels: {}

minio:
  # -- Enable the CloudPirates MinIO® chart.
  # Refer to <https://github.com/CloudPirates-io/helm-charts/blob/main/charts/minio> for possible values.
  enabled: false

postgres:
  # -- Enable the CloudPirates PostgreSQL chart.
  # Refer to <https://github.com/CloudPirates-io/helm-charts/blob/main/charts/postgres> for possible values.
  enabled: true
  auth:
    # -- Name for a custom user to create
    username: outline
    # -- Name for a custom database to create
    database: outline
    # password: "secretPassword"
  resources:
    limits:
      # -- The maximum amount of CPU the container can use
      cpu: 500m
      # -- The maximum amount of memory the container can use
      memory: 512Mi
    requests:
      # -- Specifies the minimum amount of CPU that will be allocated to the container
      cpu: 250m
      # -- Specifies the minimum amount of memory that will be allocated to the container
      memory: 256Mi
  securityContext:
    # -- Run container processes as non-root user nobody
    runAsUser: 65534
    # -- Run container processes with nobody group
    runAsGroup: 65534
    seccompProfile:
      # -- Use the container runtime default seccomp profile
      type: RuntimeDefault

redis:
  # -- Enable the CloudPirates Redis® chart.
  # Refer to <https://github.com/CloudPirates-io/helm-charts/blob/main/charts/redis> for possible values.
  enabled: true
  auth:
    # -- Enable password authentication
    enabled: false
  resources:
    limits:
      # -- The maximum amount of CPU the container can use
      cpu: 150m
      # -- The maximum amount of memory the container can use
      memory: 256Mi
    requests:
      # -- Specifies the minimum amount of CPU that will be allocated to the container
      cpu: 50m
      # -- Specifies the minimum amount of memory that will be allocated to the container
      memory: 128Mi
  containerSecurityContext:
    # -- Run container processes as non-root user nobody
    runAsUser: 65534
    # -- Run container processes with nobody group
    runAsGroup: 65534
    seccompProfile:
      # -- Use the container runtime default seccomp profile
      type: RuntimeDefault
    capabilities:
      # -- Drop all capabilities for improved security
      drop:
        - ALL
